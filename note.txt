Python Inheritance
Like any other OOP languages, Python also supports the concept of class inheritance.

Inheritance allows us to create a new class from an existing class.

The new class that is created is known as subclass (child or derived class) and the existing class from which the child class is derived is known as superclass (parent or base class).

Python Inheritance Syntax
Here's the syntax of the inheritance in Python,



The User class remains an abstract base class with an abstract method get_user_name.

The UserAuthenticator class now inherits from the User class and overrides the get_user_name method, which is no longer an abstract method. It also includes the find_user method.



The above code is using single inheritance in Python. Single inheritance is when a derived class inherits from a single base class. In this case, the class UserAuthenticator is derived from the base class User.

Here's a breakdown of the code:

The User class is defined as an abstract base class (ABC) using the ABC module.
The User class has an __init__ method that initializes the _id, _name, _email, and _password attributes.
The User class also has an abstract method get_user_name, which is meant to be implemented by its derived classes.
The UserAuthenticator class is derived from the User class.
The UserAuthenticator class has a static method find_user that takes an email and password as parameters and searches for a user in the Auth collection using the find_one method of the Auth object.
If a user is found, a new instance of the UserAuthenticator class is created with the retrieved data and returned. Otherwise, False is returned.
The UserAuthenticator class also implements the get_user_name method, which returns the _name attribute of the user.
The AuthValidation class has a static method Validate that takes an email and password as parameters.
It calls the find_user method of the UserAuthenticator class to find a user with the given email and password.
If a user is found, it calls the get_user_name method of the user and returns the user's name. Otherwise, it returns False.
This code demonstrates the concept of inheritance, where the UserAuthenticator class inherits the attributes and methods of the User class. It also shows the use of abstract classes and static methods